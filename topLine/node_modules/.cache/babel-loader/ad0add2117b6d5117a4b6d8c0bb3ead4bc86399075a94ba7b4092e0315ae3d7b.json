{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { getArtical } from '@/api/artical';\nimport { ImagePreview } from 'vant';\nimport FollowBtn from '@/components/FollowBtn';\nimport CollectBtn from '@/components/CollectBtn';\nimport LikeBtn from '@/components/LikeBtn';\nexport default {\n  name: 'ArticalIndex',\n  components: {\n    ImagePreview,\n    FollowBtn,\n    CollectBtn,\n    LikeBtn\n  },\n  props: {\n    // 文章id，从路由处获取\n    article_id: {\n      type: [Number, String, Object],\n      required: true\n    }\n  },\n  data() {\n    return {\n      artical: {},\n      //请求的文章数据\n      isLoading: false,\n      //状态加载\n      errorId: 0,\n      //错误代码\n      list: [],\n      loading: false,\n      finished: false\n    };\n  },\n  methods: {\n    // 点击左箭头按钮，返回\n    onClickLeft() {\n      this.$router.back();\n    },\n    async loadArtical(articleId) {\n      this.isLoading = true;\n      try {\n        const {\n          data\n        } = await getArtical(articleId);\n\n        // // 模拟加载失败的代码\n        // if (Math.random() > 0.5) {\n        //   JSON.parse('dsadsa')\n        // }\n\n        console.log(data);\n        this.artical = data.data;\n        //this指向问题要用箭头函数，数据驱动视图，会有延迟性，要渲染出来，才能引用的ref的内容，所以加个异步延迟操作\n        // setTimeout(() => {\n        //   console.log(this.$refs['artContext'])\n        // }, 0)\n        setTimeout(() => {\n          // 请求数据成功，添加图片预览函数\n          this.imgFn();\n        }, 0);\n      } catch (error) {\n        console.log(error);\n        if (error.response && error.response.status === 404) {\n          this.errorId = 404;\n        }\n      }\n      // 无论成功，失败都关闭loading\n      this.isLoading = false;\n    },\n    // 图片预览\n    imgFn() {\n      //获取文章内容\n      const content = this.$refs['artContext'];\n      // 获取图片节点\n      const imgs = content.querySelectorAll('img');\n      // 获取图片url\n      const imgurl = [];\n      imgs.forEach((img, index) => {\n        // 存入图片地址\n        imgurl.push(img.src);\n        // 添加点击事件\n        img.addEventListener('click', () => {\n          ImagePreview({\n            images: imgurl,\n            startPosition: index\n          });\n        });\n      });\n    },\n    // 加载评论列表\n    onLoad() {\n      // 异步更新数据\n      // setTimeout 仅做示例，真实场景中一般为 ajax 请求\n      setTimeout(() => {\n        for (let i = 0; i < 10; i++) {\n          this.list.push(this.list.length + 1);\n        }\n\n        // 加载状态结束\n        this.loading = false;\n\n        // 数据全部加载完成\n        if (this.list.length >= 40) {\n          this.finished = true;\n        }\n      }, 1000);\n    },\n    created() {\n      this.loadArtical(this.article_id);\n    }\n  }\n};","map":{"version":3,"mappings":";AAsGA;AACA;AACA;AACA;AACA;AACA;EACAA;EACAC;IACAC;IACAC;IACAC;IACAC;EACA;EACAC;IACA;IACAC;MACAC;MACAC;IACA;EACA;EACAC;IACA;MACAC;MAAA;MACAC;MAAA;MACAC;MAAA;MACAC;MACAC;MACAC;IACA;EACA;EACAC;IACA;IACAC;MACA;IACA;IACA;MACA;MACA;QACA;UAAAR;QAAA;;QAEA;QACA;QACA;QACA;;QAEAS;QACA;QACA;QACA;QACA;QACA;QACAC;UACA;UACA;QACA;MACA;QACAD;QACA;UACA;QACA;MACA;MACA;MACA;IACA;IACA;IACAE;MACA;MACA;MACA;MACA;MACA;MACA;MACAC;QACA;QACAC;QACA;QACAC;UACAtB;YACAuB;YACAC;UACA;QACA;MACA;IACA;IACA;IACAC;MACA;MACA;MACAP;QACA;UACA;QACA;;QAEA;QACA;;QAEA;QACA;UACA;QACA;MACA;IACA;IACAQ;MACA;IACA;EACA;AACA","names":["name","components","ImagePreview","FollowBtn","CollectBtn","LikeBtn","props","article_id","type","required","data","artical","isLoading","errorId","list","loading","finished","methods","onClickLeft","console","setTimeout","imgFn","imgs","imgurl","img","images","startPosition","onLoad","created"],"sourceRoot":"src/views/Artical","sources":["index.vue"],"sourcesContent":["<template>\r\n  <div class=\"artical-content\">\r\n    <!-- 顶部导航栏 -->\r\n    <van-nav-bar\r\n      title=\"文章详情\"\r\n      left-arrow\r\n      @click-left=\"onClickLeft\"\r\n      :placeholder=\"true\"\r\n      :fixed=\"true\" />\r\n    <!-- 中间展示内容 -->\r\n    <div class=\"artical-main-wrap\">\r\n      <!-- loading模块 -->\r\n      <van-loading size=\"48px\" vertical v-if=\"isLoading\">加载中...</van-loading>\r\n      <!-- 文章详情 -->\r\n      <div class=\"artical-main\" v-else-if=\"artical.title\">\r\n        <h2 class=\"title\">{{ artical.title }}</h2>\r\n        <!-- 头像，用户信息，关注按钮部分 -->\r\n        <div class=\"artical-info\">\r\n          <van-image\r\n            width=\"40\"\r\n            height=\"40\"\r\n            :src=\"artical.aut_photo\"\r\n            fit=\"cover\"\r\n            round\r\n            class=\"img-wrap\">\r\n            <template v-slot:loading>\r\n              <van-loading type=\"spinner\" size=\"20\" />\r\n            </template>\r\n          </van-image>\r\n          <div class=\"info-wrap\">\r\n            <p class=\"name\">\r\n              {{ artical.aut_name }}\r\n            </p>\r\n            <span class=\"time\">{{ artical.pubdate | foramtetime }}</span>\r\n          </div>\r\n          <!-- 关注按钮 -->\r\n          <FollowBtn\r\n            class=\"follow-btn-wrap\"\r\n            v-model=\"artical.is_followed\"\r\n            :userId=\"artical.aut_id\"></FollowBtn>\r\n        </div>\r\n        <!-- 文章正文部分 -->\r\n        <div\r\n          class=\"artical-context markdown-body\"\r\n          v-html=\"artical.content\"\r\n          ref=\"artContext\"></div>\r\n\r\n        <!-- 正文结束 -->\r\n        <van-divider class=\"divider\">正文结束</van-divider>\r\n\r\n        <!-- 评论列表 -->\r\n        <van-list\r\n          v-model=\"loading\"\r\n          :finished=\"finished\"\r\n          finished-text=\"没有更多了\"\r\n          @load=\"onLoad\">\r\n          <van-cell v-for=\"item in list\" :key=\"item\" :title=\"item\" />\r\n        </van-list>\r\n\r\n        <!-- 底部区域 -->\r\n        <div class=\"article-bottom\">\r\n          <van-button\r\n            class=\"comment-btn\"\r\n            type=\"default\"\r\n            round\r\n            size=\"small\"\r\n            @click=\"isPostShow = true\"\r\n            >写评论</van-button\r\n          >\r\n          <van-icon\r\n            name=\"comment-o\"\r\n            color=\"#777777\"\r\n            class=\"comment-icon\"\r\n            badge=\"9\" />\r\n          <CollectBtn\r\n            :articalId=\"artical.art_id\"\r\n            v-model=\"artical.is_collected\" />\r\n          <LikeBtn :articalId=\"artical.art_id\" v-model=\"artical.attitude\" />\r\n        </div>\r\n        <!-- /底部区域 -->\r\n      </div>\r\n      <!-- 错误提示 404 -->\r\n\r\n      <!-- 通用错误 -->\r\n      <van-empty\r\n        image=\"error\"\r\n        description=\"找不到指定内容，错误提示404\"\r\n        v-else-if=\"errorId === 404\" />\r\n\r\n      <!-- 错误提示 网络，数据库引起的数据加载错误 -->\r\n\r\n      <!-- 网络错误 -->\r\n      <van-empty image=\"network\" description=\"数据加载失败，请点击重试\" v-else>\r\n        <van-button plain hairline type=\"info\" @click=\"loadArtical(article_id)\"\r\n          >点击重试</van-button\r\n        >\r\n      </van-empty>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { getArtical } from '@/api/artical'\r\nimport { ImagePreview } from 'vant'\r\nimport FollowBtn from '@/components/FollowBtn'\r\nimport CollectBtn from '@/components/CollectBtn'\r\nimport LikeBtn from '@/components/LikeBtn'\r\nexport default {\r\n  name: 'ArticalIndex',\r\n  components: {\r\n    ImagePreview,\r\n    FollowBtn,\r\n    CollectBtn,\r\n    LikeBtn,\r\n  },\r\n  props: {\r\n    // 文章id，从路由处获取\r\n    article_id: {\r\n      type: [Number, String, Object],\r\n      required: true,\r\n    },\r\n  },\r\n  data() {\r\n    return {\r\n      artical: {}, //请求的文章数据\r\n      isLoading: false, //状态加载\r\n      errorId: 0, //错误代码\r\n      list: [],\r\n      loading: false,\r\n      finished: false,\r\n    }\r\n  },\r\n  methods: {\r\n    // 点击左箭头按钮，返回\r\n    onClickLeft() {\r\n      this.$router.back()\r\n    },\r\n    async loadArtical(articleId) {\r\n      this.isLoading = true\r\n      try {\r\n        const { data } = await getArtical(articleId)\r\n\r\n        // // 模拟加载失败的代码\r\n        // if (Math.random() > 0.5) {\r\n        //   JSON.parse('dsadsa')\r\n        // }\r\n\r\n        console.log(data)\r\n        this.artical = data.data\r\n        //this指向问题要用箭头函数，数据驱动视图，会有延迟性，要渲染出来，才能引用的ref的内容，所以加个异步延迟操作\r\n        // setTimeout(() => {\r\n        //   console.log(this.$refs['artContext'])\r\n        // }, 0)\r\n        setTimeout(() => {\r\n          // 请求数据成功，添加图片预览函数\r\n          this.imgFn()\r\n        }, 0)\r\n      } catch (error) {\r\n        console.log(error)\r\n        if (error.response && error.response.status === 404) {\r\n          this.errorId = 404\r\n        }\r\n      }\r\n      // 无论成功，失败都关闭loading\r\n      this.isLoading = false\r\n    },\r\n    // 图片预览\r\n    imgFn() {\r\n      //获取文章内容\r\n      const content = this.$refs['artContext']\r\n      // 获取图片节点\r\n      const imgs = content.querySelectorAll('img')\r\n      // 获取图片url\r\n      const imgurl = []\r\n      imgs.forEach((img, index) => {\r\n        // 存入图片地址\r\n        imgurl.push(img.src)\r\n        // 添加点击事件\r\n        img.addEventListener('click', () => {\r\n          ImagePreview({\r\n            images: imgurl,\r\n            startPosition: index,\r\n          })\r\n        })\r\n      })\r\n    },\r\n    // 加载评论列表\r\n    onLoad() {\r\n      // 异步更新数据\r\n      // setTimeout 仅做示例，真实场景中一般为 ajax 请求\r\n      setTimeout(() => {\r\n        for (let i = 0; i < 10; i++) {\r\n          this.list.push(this.list.length + 1)\r\n        }\r\n\r\n        // 加载状态结束\r\n        this.loading = false\r\n\r\n        // 数据全部加载完成\r\n        if (this.list.length >= 40) {\r\n          this.finished = true\r\n        }\r\n      }, 1000)\r\n    },\r\n    created() {\r\n      this.loadArtical(this.article_id)\r\n    },\r\n  },\r\n}\r\n</script>\r\n\r\n<style scoped lang=\"less\">\r\n@import url('./github-markdown.css');\r\n.artical-content {\r\n  ::v-deep .van-nav-bar__content {\r\n    background-color: #3296fa;\r\n    .van-nav-bar__title {\r\n      color: #fff;\r\n    }\r\n    .van-icon-arrow-left {\r\n      color: #fff;\r\n    }\r\n  }\r\n\r\n  .artical-main-wrap {\r\n    padding: 0px 34px 100px 34px;\r\n    height: 100%;\r\n    overflow: hidden;\r\n    background-color: #fff;\r\n    & > .van-loading {\r\n      padding-top: 50px;\r\n    }\r\n    .artical-main {\r\n      .title {\r\n        font-size: 48px;\r\n      }\r\n      .artical-info {\r\n        display: flex;\r\n        padding-top: 10px;\r\n        padding-bottom: 50px;\r\n        .img-wrap {\r\n          flex-shrink: 0; //不缩小\r\n        }\r\n        .info-wrap {\r\n          flex-shrink: 1;\r\n          width: 100%;\r\n          padding-left: 20px;\r\n          display: flex;\r\n          flex-direction: column;\r\n          .name {\r\n            font-size: 24px;\r\n            margin: 10px 0 0;\r\n            padding: 0;\r\n          }\r\n          .time {\r\n            font-size: 18px;\r\n            margin: 0;\r\n            color: rgb(119, 119, 119);\r\n          }\r\n        }\r\n        .follow-btn-wrap {\r\n          flex-shrink: 0; //不缩小\r\n\r\n          ::v-deep .follow-btn {\r\n            height: 52px;\r\n            width: 180px;\r\n            font-size: 18px;\r\n            color: #3296fa;\r\n            border-color: #3296fa;\r\n          }\r\n          ::v-deep .followed {\r\n            background-color: rgb(244, 87, 86);\r\n            border-color: rgb(244, 87, 86);\r\n            color: #fff;\r\n          }\r\n        }\r\n      }\r\n\r\n      // 分割线样式\r\n      .divider {\r\n        margin-top: 50px;\r\n        margin-bottom: 30px;\r\n      }\r\n    }\r\n  }\r\n\r\n  .article-bottom {\r\n    border-top: 1px solid #e5e5e5;\r\n    background-color: #fff;\r\n    height: 94px;\r\n    position: fixed;\r\n    bottom: 0;\r\n    left: 0;\r\n    right: 0;\r\n    display: flex;\r\n    justify-content: space-around;\r\n    align-items: center;\r\n    .comment-btn {\r\n      width: 320px;\r\n    }\r\n    .comment-icon {\r\n      position: relative;\r\n      top: 5px;\r\n    }\r\n  }\r\n}\r\n</style>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}