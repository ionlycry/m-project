{"ast":null,"code":"import { mapState, mapMutations } from 'vuex';\nimport { getUserInfo } from '@/api/user.js';\nexport default {\n  data() {\n    return {\n      userInfo: {} //用户信息\n    };\n  },\n\n  computed: {\n    ...mapState(['user'])\n  },\n  methods: {\n    onLogOut() {\n      // 弹出提示\n      this.$dialog.confirm({\n        message: '确定要退出登录吗？'\n      }).then(() => {\n        // on confirm\n        // 退出清除本地和state中的信息\n        this.setUser(null);\n      }).catch(() => {\n        // on cancel\n      });\n    },\n    ...mapMutations(['setUser']),\n    // axios获取用户信息\n    async loadUserInfo() {\n      try {\n        const {\n          data: res\n        } = await getUserInfo();\n        this.userInfo = res.data;\n      } catch (err) {\n        console.log(err);\n        this.$toast('身份认证失败，请重新登录');\n      }\n    }\n  },\n  created() {\n    // 页面初始化状态\n    // 如果登录成功，加载数据\n    if (this.user) {\n      // 加载 数据\n      this.loadUserInfo();\n    }\n  }\n};","map":{"version":3,"mappings":"AAyFA;AACA;AACA;EACAA;IACA;MACAC;IACA;EACA;;EACAC;IACA;EACA;EACAC;IACAC;MACA;MACA,aACAC;QACAC;MACA,GACAC;QACA;QACA;QACA;MACA,GACAC;QACA;MAAA,CACA;IACA;IACA;IACA;IACA;MACA;QACA;UAAAR;QAAA;QACA;MACA;QACAS;QAEA;MACA;IACA;EACA;EACAC;IACA;IACA;IACA;MACA;MACA;IACA;EACA;AACA","names":["data","userInfo","computed","methods","onLogOut","confirm","message","then","catch","console","created"],"sourceRoot":"src/views/My","sources":["index.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <!-- 顶部样式 -->\r\n    <div class=\"topWrap\">\r\n      <!-- 已登录顶部样式 -->\r\n      <div class=\"isLogin\" v-if=\"user\">\r\n        <!-- 头像信息区 -->\r\n        <div class=\"top\">\r\n          <!-- 左边头像 -->\r\n          <div class=\"left\">\r\n            <van-image\r\n              :src=\"userInfo.photo\"\r\n              round\r\n              fit=\"cover\"\r\n              class=\"portrait\" />\r\n            <span class=\"name\">{{ userInfo.name }}</span>\r\n          </div>\r\n          <!-- 右边按钮编辑 -->\r\n          <div class=\"right\">\r\n            <van-button\r\n              plain\r\n              hairline\r\n              round\r\n              class=\"edit-btn\"\r\n              to=\"../user/profile\"\r\n              >编辑资料</van-button\r\n            >\r\n          </div>\r\n        </div>\r\n        <!-- 详细信息区 -->\r\n        <div class=\"bottom\">\r\n          <div class=\"item\">\r\n            <span class=\"num\">{{ userInfo.art_count }}</span>\r\n            <span class=\"item-title\">头条</span>\r\n          </div>\r\n          <div class=\"item\">\r\n            <span class=\"num\">{{ userInfo.follow_count }}</span>\r\n            <span class=\"item-title\">关注</span>\r\n          </div>\r\n          <div class=\"item\">\r\n            <span class=\"num\">{{ userInfo.fans_count }}</span>\r\n            <span class=\"item-title\">粉丝</span>\r\n          </div>\r\n          <div class=\"item\">\r\n            <span class=\"num\">{{ userInfo.like_count }}</span>\r\n            <span class=\"item-title\">获赞</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <!-- 未登录顶部样式 -->\r\n      <div class=\"isNotLogin\" v-else>\r\n        <a\r\n          class=\"phoneImg\"\r\n          href=\"javascript:;\"\r\n          @click.prevent=\"$router.push('/login')\"></a>\r\n        <p class=\"txt\">登陆 / 注册</p>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- 功能按钮区 -->\r\n    <div class=\"operateBtnWrap\">\r\n      <van-grid :border=\"false\" :column-num=\"2\">\r\n        <van-grid-item\r\n          icon-prefix=\"toutiao\"\r\n          icon=\"shoucang\"\r\n          text=\"收藏\"\r\n          clickable />\r\n        <van-grid-item\r\n          icon-prefix=\"toutiao\"\r\n          icon=\"lishi\"\r\n          text=\"历史\"\r\n          clickable />\r\n      </van-grid>\r\n    </div>\r\n    <!--  动作区-->\r\n    <div class=\"actionSheet\">\r\n      <van-cell title=\"消息通知\" is-link />\r\n      <van-cell title=\"小智同学\" is-link />\r\n    </div>\r\n    <!-- 退出按钮 -->\r\n    <div v-if=\"user\">\r\n      <van-button block class=\"logoutBtn\" @click=\"onLogOut\" clickable\r\n        >退出登录</van-button\r\n      >\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { mapState, mapMutations } from 'vuex'\r\nimport { getUserInfo } from '@/api/user.js'\r\nexport default {\r\n  data() {\r\n    return {\r\n      userInfo: {}, //用户信息\r\n    }\r\n  },\r\n  computed: {\r\n    ...mapState(['user']),\r\n  },\r\n  methods: {\r\n    onLogOut() {\r\n      // 弹出提示\r\n      this.$dialog\r\n        .confirm({\r\n          message: '确定要退出登录吗？',\r\n        })\r\n        .then(() => {\r\n          // on confirm\r\n          // 退出清除本地和state中的信息\r\n          this.setUser(null)\r\n        })\r\n        .catch(() => {\r\n          // on cancel\r\n        })\r\n    },\r\n    ...mapMutations(['setUser']),\r\n    // axios获取用户信息\r\n    async loadUserInfo() {\r\n      try {\r\n        const { data: res } = await getUserInfo()\r\n        this.userInfo = res.data\r\n      } catch (err) {\r\n        console.log(err)\r\n\r\n        this.$toast('身份认证失败，请重新登录')\r\n      }\r\n    },\r\n  },\r\n  created() {\r\n    // 页面初始化状态\r\n    // 如果登录成功，加载数据\r\n    if (this.user) {\r\n      // 加载 数据\r\n      this.loadUserInfo()\r\n    }\r\n  },\r\n}\r\n</script>\r\n\r\n<style scoped lang=\"less\">\r\n.topWrap {\r\n  background: #fff url('~@/assets/banner.png') no-repeat;\r\n  background-size: cover;\r\n  height: 360px;\r\n  width: 100%;\r\n  .isNotLogin {\r\n    height: 360px;\r\n    width: 100%;\r\n    display: flex;\r\n    flex-direction: column; //改成垂直方向，主轴改成y了\r\n    justify-content: center; //主轴的布局\r\n    align-items: center; //交叉轴的布局\r\n    .phoneImg {\r\n      width: 132px;\r\n      height: 132px;\r\n      background: url('~@/assets/mobile.png') no-repeat center;\r\n      background-size: 80%;\r\n      border-radius: 66px;\r\n    }\r\n    .txt {\r\n      font-size: 26px;\r\n      width: 150px;\r\n      text-align: center;\r\n      color: #fff;\r\n      margin: 0;\r\n    }\r\n  }\r\n  // 登录状态样式\r\n  .isLogin {\r\n    padding: 0px 30px 0px;\r\n    box-sizing: border-box;\r\n    .top {\r\n      display: flex;\r\n      justify-content: space-between;\r\n      align-items: center;\r\n      height: 240px;\r\n      .left {\r\n        display: flex;\r\n        align-items: center;\r\n        .portrait {\r\n          width: 116px;\r\n          height: 116px;\r\n          border: 4px solid #fff;\r\n        }\r\n        .name {\r\n          margin-left: 18px;\r\n          font-size: 26px;\r\n          color: #fff;\r\n        }\r\n      }\r\n\r\n      .right {\r\n        .edit-btn {\r\n          font-size: 18px;\r\n          padding: 0 20px;\r\n          height: 32px;\r\n          line-height: 32px;\r\n        }\r\n      }\r\n    }\r\n\r\n    .bottom {\r\n      display: flex;\r\n      .item {\r\n        height: 120px;\r\n        width: 100%;\r\n        flex: 1;\r\n        text-align: center;\r\n        color: #fff;\r\n        display: flex;\r\n        flex-direction: column;\r\n        .num {\r\n          font-size: 40px;\r\n          font-weight: 300;\r\n        }\r\n\r\n        .item-title {\r\n          font-size: 22px;\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n.operateBtnWrap {\r\n  ::v-deep {\r\n    .toutiao {\r\n      font-size: 40px;\r\n    }\r\n    .toutiao-shoucang {\r\n      color: rgb(209, 39, 39);\r\n    }\r\n    .toutiao-lishi {\r\n      color: rgb(224, 104, 34);\r\n    }\r\n  }\r\n}\r\n.actionSheet {\r\n  margin: 10px;\r\n}\r\n.logoutBtn {\r\n  color: rgb(209, 39, 39);\r\n}\r\n</style>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}