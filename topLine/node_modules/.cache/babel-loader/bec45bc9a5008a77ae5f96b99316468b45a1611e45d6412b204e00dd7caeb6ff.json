{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { getAllChannels } from '@/api/channel';\nexport default {\n  data() {\n    return {\n      allChannels: [],\n      //所有频道列表\n      isEdit: false,\n      fixedChannel: [0, 4] //锁定的频道的id，不能操作，只能显示和跳转\n    };\n  },\n\n  props: {\n    channels: {\n      type: Array,\n      required: true\n    },\n    activeId: {\n      type: Number,\n      required: true\n    }\n  },\n  computed: {\n    recommendChannels() {\n      return this.allChannels.filter(item => {\n        return !this.channels.find(key => {\n          return key.id === item.id;\n        });\n      });\n    }\n  },\n  methods: {\n    // 初始化频道列表\n    async getChannels() {\n      try {\n        const {\n          data: res\n        } = await getAllChannels();\n        this.allChannels = res.data.channels;\n      } catch (error) {\n        this.$toast('读取全部频道列表出错');\n      }\n    },\n    // 点击我的频道中的item\n    myChannelClick(value, index) {\n      // 是否编辑状态\n      if (this.isEdit) {\n        // 1,编辑状态\n        if (this.fixedChannel.includes(value.id)) {\n          // 是锁定频道就返回\n          return;\n        }\n        // 点击删除频道\n        this.removeChannel(index);\n        console.log('activeId', this.activeId);\n        console.log('index', index);\n        if (index <= this.activeId) {\n          this.changeActiveFn(this.activeId - 1);\n        }\n      } else {\n        // 2，非编辑状态\n        // 点击设置对应标签高亮\n        this.changeActiveFn(index);\n      }\n    },\n    // 点击对应标签高亮显示，根据点击的index\n    changeActiveFn(index) {\n      this.$emit('changeActiveFn', index);\n      // console.log(value, index)\n    },\n\n    // 添加频道\n    addChannels(value) {\n      // console.log(value)\n      this.channels.push(value);\n    },\n    // 删除频道\n    removeChannel(index) {\n      this.channels.splice(index, 1);\n    }\n  },\n  created() {\n    this.getChannels();\n  }\n};","map":{"version":3,"mappings":";AAwDA;AACA;EACAA;IACA;MACAC;MAAA;MACAC;MACAC;IACA;EACA;;EACAC;IACAC;MACAC;MACAC;IACA;IACAC;MACAF;MACAC;IACA;EACA;EACAE;IACAC;MACA;QACA;UACA;QACA;MACA;IACA;EACA;EACAC;IACA;IACA;MACA;QACA;UAAAX;QAAA;QACA;MACA;QACA;MACA;IACA;IACA;IACAY;MACA;MACA;QACA;QACA;UACA;UACA;QACA;QACA;QACA;QACAC;QACAA;QACA;UACA;QACA;MACA;QACA;QACA;QACA;MACA;IACA;IACA;IACAC;MACA;MACA;IACA;;IACA;IACAC;MACA;MACA;IACA;IACA;IACAC;MACA;IACA;EACA;EACAC;IACA;EACA;AACA","names":["data","allChannels","isEdit","fixedChannel","props","channels","type","required","activeId","computed","recommendChannels","methods","myChannelClick","console","changeActiveFn","addChannels","removeChannel","created"],"sourceRoot":"src/views/Home/components","sources":["ChannelEdit.vue"],"sourcesContent":["<template>\r\n  <div class=\"channel-wrap\">\r\n    <van-button\r\n      type=\"warning\"\r\n      plain\r\n      round\r\n      size=\"mini\"\r\n      class=\"btn-edit\"\r\n      @click=\"isEdit = !isEdit\"\r\n      >{{ isEdit ? '完成' : '编辑' }}</van-button\r\n    >\r\n    <div class=\"GridClass myGridClass\">\r\n      <p class=\"title\">我的频道</p>\r\n      <van-grid :gutter=\"12\" :border=\"false\" :clickable=\"true\">\r\n        <van-grid-item\r\n          v-for=\"(value, index) in channels\"\r\n          :key=\"index\"\r\n          :class=\"{ active: index === activeId }\"\r\n          @click=\"myChannelClick(value, index)\">\r\n          <template #icon>\r\n            <van-icon\r\n              name=\"clear\"\r\n              v-show=\"isEdit && !fixedChannel.includes(value.id)\" />\r\n          </template>\r\n          <template #text>\r\n            <span class=\"text\">{{ value.name }}{{ index }}</span>\r\n          </template>\r\n        </van-grid-item>\r\n      </van-grid>\r\n    </div>\r\n    <!-- 推荐频道 -->\r\n    <div class=\"GridClass recommendGridClass\">\r\n      <p class=\"title\">频道推荐</p>\r\n      <van-grid\r\n        :gutter=\"12\"\r\n        :border=\"false\"\r\n        direction=\"horizontal\"\r\n        icon-size=\"18\"\r\n        :clickable=\"true\">\r\n        <van-grid-item\r\n          v-for=\"(value, index) in recommendChannels\"\r\n          :key=\"value.id\"\r\n          @click=\"addChannels(value, index)\">\r\n          <template #icon>\r\n            <van-icon name=\"plus\" v-show=\"isEdit\" />\r\n          </template>\r\n          <template #text>\r\n            <span class=\"text\">{{ value.name }}</span>\r\n          </template>\r\n        </van-grid-item>\r\n      </van-grid>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { getAllChannels } from '@/api/channel'\r\nexport default {\r\n  data() {\r\n    return {\r\n      allChannels: [], //所有频道列表\r\n      isEdit: false,\r\n      fixedChannel: [0, 4], //锁定的频道的id，不能操作，只能显示和跳转\r\n    }\r\n  },\r\n  props: {\r\n    channels: {\r\n      type: Array,\r\n      required: true,\r\n    },\r\n    activeId: {\r\n      type: Number,\r\n      required: true,\r\n    },\r\n  },\r\n  computed: {\r\n    recommendChannels() {\r\n      return this.allChannels.filter((item) => {\r\n        return !this.channels.find((key) => {\r\n          return key.id === item.id\r\n        })\r\n      })\r\n    },\r\n  },\r\n  methods: {\r\n    // 初始化频道列表\r\n    async getChannels() {\r\n      try {\r\n        const { data: res } = await getAllChannels()\r\n        this.allChannels = res.data.channels\r\n      } catch (error) {\r\n        this.$toast('读取全部频道列表出错')\r\n      }\r\n    },\r\n    // 点击我的频道中的item\r\n    myChannelClick(value, index) {\r\n      // 是否编辑状态\r\n      if (this.isEdit) {\r\n        // 1,编辑状态\r\n        if (this.fixedChannel.includes(value.id)) {\r\n          // 是锁定频道就返回\r\n          return\r\n        }\r\n        // 点击删除频道\r\n        this.removeChannel(index)\r\n        console.log('activeId', this.activeId)\r\n        console.log('index', index)\r\n        if (index <= this.activeId) {\r\n          this.changeActiveFn(this.activeId - 1)\r\n        }\r\n      } else {\r\n        // 2，非编辑状态\r\n        // 点击设置对应标签高亮\r\n        this.changeActiveFn(index)\r\n      }\r\n    },\r\n    // 点击对应标签高亮显示，根据点击的index\r\n    changeActiveFn(index) {\r\n      this.$emit('changeActiveFn', index)\r\n      // console.log(value, index)\r\n    },\r\n    // 添加频道\r\n    addChannels(value) {\r\n      // console.log(value)\r\n      this.channels.push(value)\r\n    },\r\n    // 删除频道\r\n    removeChannel(index) {\r\n      this.channels.splice(index, 1)\r\n    },\r\n  },\r\n  created() {\r\n    this.getChannels()\r\n  },\r\n}\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n.channel-wrap {\r\n  padding-top: 64px;\r\n  position: relative;\r\n  .btn-edit {\r\n    position: absolute;\r\n    right: 26px;\r\n    top: 92px;\r\n    width: 104px;\r\n    height: 48px;\r\n    line-height: 48px;\r\n  }\r\n  .title {\r\n    padding-left: 20px;\r\n    font-size: 32px;\r\n  }\r\n  ::v-deep .GridClass {\r\n    .van-grid-item {\r\n      .van-grid-item__content {\r\n        border-radius: 8px;\r\n        align-items: center;\r\n        background-color: rgb(246, 246, 246);\r\n        padding: 18px 0px;\r\n        border: 2px solid rgb(246, 246, 246);\r\n        .van-grid-item__icon-wrapper {\r\n          font-size: 28px;\r\n        }\r\n        .text {\r\n          font-size: 24px;\r\n          line-height: unset;\r\n          margin: 0 0 0 4px;\r\n        }\r\n      }\r\n    }\r\n    .active {\r\n      .van-grid-item__content {\r\n        border: 2px solid rgb(235, 14, 14);\r\n        .text {\r\n          color: rgb(235, 14, 14);\r\n        }\r\n      }\r\n    }\r\n    &.myGridClass {\r\n      .van-grid-item__icon-wrapper {\r\n        font-size: 32px;\r\n        position: absolute;\r\n        right: 8px;\r\n        top: -14px;\r\n      }\r\n    }\r\n  }\r\n}\r\n</style>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}