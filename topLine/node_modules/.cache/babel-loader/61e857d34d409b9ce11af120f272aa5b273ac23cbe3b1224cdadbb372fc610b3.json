{"ast":null,"code":"import { getSuggestionListApi } from '@/api/search';\n// 引入防抖函数\nimport { debounce } from 'lodash';\nexport default {\n  props: {\n    // 接收父组件的输入的值\n    inputVal: {\n      type: String,\n      required: true\n    }\n  },\n  data() {\n    return {\n      // 联想建议的数组\n      suggestions: []\n    };\n  },\n  watch: {\n    inputVal: {\n      // handler(newVal, oldVal) {\n      //   // console.log('newVal', newVal)\n      //   // console.log('oldVal', oldVal)\n      //   this.loadSuggestions(newVal)\n      // },\n      handler: debounce(function (newVal) {\n        this.loadSuggestions(newVal);\n      }, 300),\n      immediate: true //侦听开始之后立调用\n    }\n  },\n\n  methods: {\n    async loadSuggestions(val) {\n      // console.log(val)\n      // 如果搜索有值，发送请求\n      try {\n        const {\n          data: res\n        } = await getSuggestionListApi(val);\n        // console.log(res.data)\n        this.suggestions = res.data.options;\n        console.log(this.suggestions);\n      } catch (error) {\n        this.$toast('数据获取失败，请稍后重试');\n      }\n    },\n    toHightLight(text) {\n      const htmlStr = `<span class='active'>${this.inputVal}</span>`;\n      // 正则/abc/gi\n      const reg = new RegExp(this.inputVal, 'gi');\n      console.log('reg', reg);\n      console.log('text', text);\n      return text.replace(reg, htmlStr);\n    }\n  }\n};","map":{"version":3,"mappings":"AAaA;AACA;AACA;AACA;EACAA;IACA;IACAC;MACAC;MACAC;IACA;EACA;EACAC;IACA;MACA;MACAC;IACA;EACA;EACAC;IACAL;MACA;MACA;MACA;MACA;MACA;MACAM;QACA;MACA;MACAC;IACA;EACA;;EACAC;IACA;MACA;MACA;MACA;QACA;UAAAL;QAAA;QACA;QACA;QACAM;MACA;QACA;MACA;IACA;IACAC;MACA;MACA;MACA;MACAD;MACAA;MACA;IACA;EACA;AACA","names":["props","inputVal","type","required","data","suggestions","watch","handler","immediate","methods","console","toHightLight"],"sourceRoot":"src/views/Search/components","sources":["SearchSuggestion.vue"],"sourcesContent":["<template>\r\n  <div class=\"suggestion-list\">\r\n    <van-cell\r\n      icon=\"search\"\r\n      v-for=\"(item, index) in suggestions\"\r\n      :key=\"index\"\r\n      @click=\"$emit('search', item)\">\r\n      <div slot=\"title\" v-html=\"toHightLight(item)\"></div>\r\n    </van-cell>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { getSuggestionListApi } from '@/api/search'\r\n// 引入防抖函数\r\nimport { debounce } from 'lodash'\r\nexport default {\r\n  props: {\r\n    // 接收父组件的输入的值\r\n    inputVal: {\r\n      type: String,\r\n      required: true,\r\n    },\r\n  },\r\n  data() {\r\n    return {\r\n      // 联想建议的数组\r\n      suggestions: [],\r\n    }\r\n  },\r\n  watch: {\r\n    inputVal: {\r\n      // handler(newVal, oldVal) {\r\n      //   // console.log('newVal', newVal)\r\n      //   // console.log('oldVal', oldVal)\r\n      //   this.loadSuggestions(newVal)\r\n      // },\r\n      handler: debounce(function (newVal) {\r\n        this.loadSuggestions(newVal)\r\n      }, 300),\r\n      immediate: true, //侦听开始之后立调用\r\n    },\r\n  },\r\n  methods: {\r\n    async loadSuggestions(val) {\r\n      // console.log(val)\r\n      // 如果搜索有值，发送请求\r\n      try {\r\n        const { data: res } = await getSuggestionListApi(val)\r\n        // console.log(res.data)\r\n        this.suggestions = res.data.options\r\n        console.log(this.suggestions)\r\n      } catch (error) {\r\n        this.$toast('数据获取失败，请稍后重试')\r\n      }\r\n    },\r\n    toHightLight(text) {\r\n      const htmlStr = `<span class='active'>${this.inputVal}</span>`\r\n      // 正则/abc/gi\r\n      const reg = new RegExp(this.inputVal, 'gi')\r\n      console.log('reg', reg)\r\n      console.log('text', text)\r\n      return text.replace(reg, htmlStr)\r\n    },\r\n  },\r\n}\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n.suggestion-list {\r\n  ::v-deep .active {\r\n    color: #3296fa;\r\n  }\r\n}\r\n</style>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}