{"ast":null,"code":"import { editPhoto } from '@/api/user';\nimport 'cropperjs/dist/cropper.css';\nimport Cropper from 'cropperjs';\nimport dayjs from 'dayjs';\nexport default {\n  props: {\n    userImg: {\n      type: [String, Object],\n      required: true\n    }\n  },\n  data() {\n    return {\n      cropper: null\n    };\n  },\n  methods: {\n    onConfirm() {\n      const photoFile = this.cropper.getCroppedCanvas().toBlob(blob => {\n        // 普通js对象 application/json\n        // editPhoto(blob)\n        // multipart/form-data 必须传FormData对象\n        this.updateUserPhoto(blob);\n      });\n    },\n    async updateUserPhoto(blob) {\n      this.$toast.loading({\n        message: '保存中...',\n        duration: 0,\n        forbidClick: true\n      });\n      try {\n        const formData = new FormData();\n        formData.append('photo', blob);\n        const {\n          data\n        } = await editPhoto(formData);\n        console.log('上传图片', data);\n        // 关闭弹层\n        this.$emit('close');\n        // 更新视图\n        this.$emit('updatePhoto', data.data.photo);\n        this.$toast.success('更新成功');\n      } catch (error) {\n        console.log(error);\n      }\n    }\n  },\n  mounted() {\n    // 初始化图片裁剪，要在dom挂载完进行\n    const image = this.$refs.img;\n    this.cropper = new Cropper(image, {\n      aspectRatio: 1,\n      viewMode: 1,\n      dragMode: 'move',\n      autoCropArea: 1,\n      //自动截取区域\n      cropBoxMovable: false,\n      //裁剪框是否移动\n      cropBoxResizable: false,\n      //裁剪框是否可以缩放\n      background: false,\n      movable: true\n    });\n  }\n};","map":{"version":3,"mappings":"AAWA;AACA;AACA;AACA;AACA;EACAA;IACAC;MACAC;MACAC;IACA;EACA;EACAC;IACA;MACAC;IACA;EACA;EACAC;IACAC;MACA;QACA;QACA;QACA;QACA;MACA;IACA;IAEA;MACA;QACAC;QACAC;QACAC;MACA;MACA;QACA;QACAC;QAEA;UAAAP;QAAA;QACAQ;QACA;QACA;QACA;QACA;QACA;MACA;QACAA;MACA;IACA;EACA;EACAC;IACA;IACA;IACA;MACAC;MACAC;MACAC;MACAC;MAAA;MACAC;MAAA;MACAC;MAAA;MACAC;MACAC;IACA;EACA;AACA","names":["props","userImg","type","required","data","cropper","methods","onConfirm","message","duration","forbidClick","formData","console","mounted","aspectRatio","viewMode","dragMode","autoCropArea","cropBoxMovable","cropBoxResizable","background","movable"],"sourceRoot":"src/views/User/components","sources":["UpdateImg.vue"],"sourcesContent":["<template>\r\n  <div class=\"edit-img-wrap\">\r\n    <img :src=\"userImg\" ref=\"img\" />\r\n    <div class=\"tool-bar\">\r\n      <div class=\"btn\" @click=\"$emit('close')\">取消</div>\r\n      <div class=\"btn\" @click=\"onConfirm\">完成</div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { editPhoto } from '@/api/user'\r\nimport 'cropperjs/dist/cropper.css'\r\nimport Cropper from 'cropperjs'\r\nimport dayjs from 'dayjs'\r\nexport default {\r\n  props: {\r\n    userImg: {\r\n      type: [String, Object],\r\n      required: true,\r\n    },\r\n  },\r\n  data() {\r\n    return {\r\n      cropper: null,\r\n    }\r\n  },\r\n  methods: {\r\n    onConfirm() {\r\n      const photoFile = this.cropper.getCroppedCanvas().toBlob((blob) => {\r\n        // 普通js对象 application/json\r\n        // editPhoto(blob)\r\n        // multipart/form-data 必须传FormData对象\r\n        this.updateUserPhoto(blob)\r\n      })\r\n    },\r\n\r\n    async updateUserPhoto(blob) {\r\n      this.$toast.loading({\r\n        message: '保存中...',\r\n        duration: 0,\r\n        forbidClick: true,\r\n      })\r\n      try {\r\n        const formData = new FormData()\r\n        formData.append('photo', blob)\r\n\r\n        const { data } = await editPhoto(formData)\r\n        console.log('上传图片', data)\r\n        // 关闭弹层\r\n        this.$emit('close')\r\n        // 更新视图\r\n        this.$emit('updatePhoto', data.data.photo)\r\n        this.$toast.success('更新成功')\r\n      } catch (error) {\r\n        console.log(error)\r\n      }\r\n    },\r\n  },\r\n  mounted() {\r\n    // 初始化图片裁剪，要在dom挂载完进行\r\n    const image = this.$refs.img\r\n    this.cropper = new Cropper(image, {\r\n      aspectRatio: 1,\r\n      viewMode: 1,\r\n      dragMode: 'move',\r\n      autoCropArea: 1, //自动截取区域\r\n      cropBoxMovable: false, //裁剪框是否移动\r\n      cropBoxResizable: false, //裁剪框是否可以缩放\r\n      background: false,\r\n      movable: true,\r\n    })\r\n  },\r\n}\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n.edit-img-wrap {\r\n  height: 100%;\r\n  background-color: #000;\r\n  .portrait {\r\n    display: block;\r\n    max-width: 100%;\r\n  }\r\n  .tool-bar {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    position: fixed;\r\n    bottom: 0;\r\n    left: 0;\r\n    right: 0;\r\n    .btn {\r\n      width: 160px;\r\n      height: 90px;\r\n      text-align: center;\r\n      color: #fff;\r\n      font-size: 38px;\r\n    }\r\n  }\r\n}\r\n</style>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}