{"ast":null,"code":"import Vue from 'vue';\nimport Vuex from 'vuex';\nimport { setItem, getItem } from '@/utils/storage';\nVue.use(Vuex);\n// 设置成变量，可以实时监控，如果是字符串，无法检测到\nconst TOKEN_KEY = 'toutiaoUser';\nconst store = new Vuex.Store({\n  state: {\n    // 设置用户信息\n    // 字符串转换成对象JSON.parse\n    user: getItem(TOKEN_KEY)\n  },\n  mutations: {\n    setUser(state, data) {\n      state.user = data;\n      // 增加本地存储，持久化\n      //对象转换成json字符串JSON.stringify\n      setItem(TOKEN_KEY, data);\n    }\n  }\n});\nexport default store;","map":{"version":3,"names":["Vue","Vuex","setItem","getItem","use","TOKEN_KEY","store","Store","state","user","mutations","setUser","data"],"sources":["C:/Users/12031/cry/vue/mProject/topLine/src/store/index.js"],"sourcesContent":["import Vue from 'vue'\r\nimport Vuex from 'vuex'\r\nimport { setItem, getItem } from '@/utils/storage'\r\nVue.use(Vuex)\r\n// 设置成变量，可以实时监控，如果是字符串，无法检测到\r\nconst TOKEN_KEY = 'toutiaoUser'\r\nconst store = new Vuex.Store({\r\n  state: {\r\n    // 设置用户信息\r\n    // 字符串转换成对象JSON.parse\r\n    user: getItem(TOKEN_KEY)\r\n  },\r\n  mutations: {\r\n    setUser (state, data) {\r\n      state.user = data\r\n      // 增加本地存储，持久化\r\n      //对象转换成json字符串JSON.stringify\r\n      setItem(TOKEN_KEY, data)\r\n    }\r\n  }\r\n})\r\n\r\nexport default store\r\n"],"mappings":"AAAA,OAAOA,GAAG,MAAM,KAAK;AACrB,OAAOC,IAAI,MAAM,MAAM;AACvB,SAASC,OAAO,EAAEC,OAAO,QAAQ,iBAAiB;AAClDH,GAAG,CAACI,GAAG,CAACH,IAAI,CAAC;AACb;AACA,MAAMI,SAAS,GAAG,aAAa;AAC/B,MAAMC,KAAK,GAAG,IAAIL,IAAI,CAACM,KAAK,CAAC;EAC3BC,KAAK,EAAE;IACL;IACA;IACAC,IAAI,EAAEN,OAAO,CAACE,SAAS;EACzB,CAAC;EACDK,SAAS,EAAE;IACTC,OAAO,CAAEH,KAAK,EAAEI,IAAI,EAAE;MACpBJ,KAAK,CAACC,IAAI,GAAGG,IAAI;MACjB;MACA;MACAV,OAAO,CAACG,SAAS,EAAEO,IAAI,CAAC;IAC1B;EACF;AACF,CAAC,CAAC;AAEF,eAAeN,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}